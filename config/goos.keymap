/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#include <dt-bindings/zmk/bt.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT



#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

/ {
 behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };
  //  conditional_layers { compatible = "zmk,conditional-layers"; };

   // combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        alpha_qwerty {
            bindings = <
&kp Q  &kp W  &kp E  &kp R    &kp T                            &kp Y    &kp U     &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F    &kp G                            &kp H    &kp J     &kp K      &kp L    &kp S
&kp Z  &kp X  &kp C  &kp V    &kp B                            &kp N    &kp M     &kp COMMA  &kp DOT  &kp SLASH
                     &kp ESC  &kp SPACE  &kp TAB    &kp ENTER  &kp ESC  &kp BSPC
            >;
        };
    };
};
